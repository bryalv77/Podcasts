/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import { FC, useEffect, useState } from 'react'
import axios from 'axios';
import Link from 'next/link';
import { useRouter } from 'next/router';
import Loader from '../../../components/loader';
import Title from '../../../components/title';


const API_URL = 'https://itunes.apple.com/lookup?&media=podcast&entity=podcastEpisode&limit=100&id=';
const CORS_HELPER = 'https://api.allorigins.win/get?url='

export const Podcast: FC<{}> = ({}) => {
  const [isLoading, setIsLoading] = useState(true);
  const [podcast, setPodcast]:any = useState(null)
  const [podcastList, setPodcastList]:any = useState([]);
  const router = useRouter();
  const {podcastId} = router.query;
  useEffect(() => {
    const fetchData = async () => {
      const url = encodeURIComponent(`${API_URL}${podcastId}`);
      const requestUrl = `${CORS_HELPER}${url}`;
      console.log('requestUrl: ', requestUrl);
      const result = await axios.get(requestUrl);
      const contents = JSON.parse(result.data.contents);
      setPodcastList(contents.results);
      setIsLoading(false);
    };
    if (podcastId) {
      const allPodcasts = JSON.parse(localStorage.podcasts);
      const currentPodcast = allPodcasts.find((podcast: any) => podcast.id.attributes['im:id'] === podcastId);
      setPodcast(currentPodcast);
      fetchData();
    }
  }, [podcastId]);

  return (
    <>
      {
        isLoading && <Loader />
      }
      <Head>
        <title>Podcast</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        <Title title={podcast.label} />
      </main>
      <style jsx>{`
        
      `}</style>

    </>
  )
};

export default Podcast;