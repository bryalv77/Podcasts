/* eslint-disable @next/next/no-img-element */
import Head from 'next/head'
import { useEffect, useState } from 'react'
import Title from '../components/title'
import axios from 'axios';
import Separator from '../components/separator';
import Card from '../components/card';
import Link from 'next/link';

const API_URL = 'https://itunes.apple.com/us/rss/toppodcasts/limit=100/genre=1310/json';

export default function Podcasts() {
  const [podcasts, setPodcasts]:any = useState([]);
  
  useEffect(() => {
    const fetchData = async () => {
      if (localStorage.podcasts || localStorage.lastUpdatePodcasts > Date.now() - 1000 * 60 * 60 * 24) {
        setPodcasts(JSON.parse(localStorage.podcasts));
        return;
      }
      const result = await axios.get(API_URL);
      const { entry } = result.data.feed;
      setPodcasts(entry);
      localStorage.podcasts = JSON.stringify(entry);
      localStorage.lastUpdatePodcasts = Date.now();
    };

    fetchData();
  }, []);

  return (
    <>
      <Head>
        <title>Podcaster</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="main">
        <Title title="Podcaster" />
        <Separator />
        <div className="grid">
          {
            podcasts.map((podcast: any) => {
              return (
                <Link style={{textDecoration: 'none'}} href={`/podcast/${podcast.id.attributes['im:id']}`} key={podcast.id.attributes['im:id']}>
                  <Card 
                    title={podcast['im:name'].label}
                    description={podcast['im:artist'].label}
                    image={podcast['im:image'][2].label}
                  />
                </Link>
              )
            })
          }
        </div>
      </main>
      <style jsx>{`
        .main {
          display: flex;
          flex-direction: column;
          width: 100%;
          max-width: 1080px;
        }
        .grid {
          display: grid;
          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
          grid-gap: 1rem;
          margin: 1rem 0;
        }
      `}</style>

    </>
  )
};
